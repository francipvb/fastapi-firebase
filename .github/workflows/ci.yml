on:
  pull_request:
    branches:
      - "main"
      - "develop"

  push:
    branches:
      - "develop"
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - run: pip install --upgrade pip poetry coveralls
      - uses: actions/checkout@v2
      - run: poetry install
      - run: poetry run pytest --cov=fastapi_firebase
      - run: poetry run coverage lcov
      - name: Upload coverage data to coveralls.io
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: python${{ matrix.python_version }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    container:
      image: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_github:
    name: Publish to github
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/checkout@v2
      - run: pip install --upgrade pip poetry
        name: Install dependencies
      - run: poetry install
      - run: poetry build
      - uses: softprops/action-gh-release@v0.1.14
        with:
          files: dist/*

  test_publish_to_pypi:
    runs-on: ubuntu-latest
    environment: test_deployment
    needs: test
    name: Test publish to PyPI
    if: startsWith(github.ref, 'refs/heads/')
    steps:
      - uses: actions/checkout@v2
      - name: Publish to TestPyPI
        uses: JRubics/poetry-publish@v1.10
        with:
          repository_name: testpypi
          repository_url: ${{ secrets.PYPI_REPOSITORY }}
          repository_username: __token__
          repository_password: ${{ secrets.pypi_token }}

  publish_to_pypi:
    runs-on: ubuntu-latest
    environment: Production
    needs: test
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Publish to PyPI
        uses: JRubics/poetry-publish@v1.10
        with:
          repository_name: testpypi
          repository_url: ${{ secrets.PYPI_REPOSITORY }}
          repository_username: __token__
          repository_password: ${{ secrets.pypi_token }}
